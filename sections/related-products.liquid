{% comment %}
  Related products section for product pages
{% endcomment %}

<section class="related-products">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">You Might Also Like</h2>
      <p class="section-subtitle">Discover more products you'll love</p>
    </div>
    
    <div class="products-slider">
      <div class="products-track" id="products-track">
        {% assign related_products = collections.all.products | where: 'type', product.type | where: 'available', true %}
        {% for related_product in related_products limit: 8 %}
          {% unless related_product.id == product.id %}
            <div class="product-slide">
              <div class="product-card">
                <div class="product-image-wrapper">
                  <a href="{{ related_product.url }}">
                    <img src="{{ related_product.featured_image | img_url: '300x300' }}" alt="{{ related_product.title }}" class="product-image">
                  </a>
                  <div class="product-overlay">
                    <div class="product-actions">
                      <button class="btn-quick-view" data-product-id="{{ related_product.id }}">Quick View</button>
                      <form action="/cart/add" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="id" value="{{ related_product.selected_or_first_available_variant.id }}">
                        <button type="submit" class="btn-add-to-cart">Add to Cart</button>
                      </form>
                    </div>
                  </div>
                  {% if related_product.compare_at_price > related_product.price %}
                    <div class="product-badge">Sale</div>
                  {% endif %}
                </div>
                <div class="product-info">
                  <h3 class="product-title">
                    <a href="{{ related_product.url }}">{{ related_product.title }}</a>
                  </h3>
                  <div class="product-price">
                    {% if related_product.compare_at_price > related_product.price %}
                      <span class="price-sale">{{ related_product.price | money }}</span>
                      <span class="price-compare">{{ related_product.compare_at_price | money }}</span>
                    {% else %}
                      <span class="price-regular">{{ related_product.price | money }}</span>
                    {% endif %}
                  </div>
                </div>
              </div>
            </div>
          {% endunless %}
        {% endfor %}
      </div>
      
      <button class="slider-btn slider-btn-prev" id="slider-prev">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      
      <button class="slider-btn slider-btn-next" id="slider-next">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,6 15,12 9,18"></polyline>
        </svg>
      </button>
    </div>
    
    <div class="slider-dots" id="slider-dots">
      <!-- Dots will be generated by JavaScript -->
    </div>
  </div>
</section>

<style>
  .related-products {
    padding: 80px 0;
    background: #f8f8f8;
  }
  
  .section-header {
    text-align: center;
    margin-bottom: 50px;
  }
  
  .section-title {
    font-size: 2.2rem;
    font-weight: 900;
    margin: 0 0 15px 0;
    color: #000;
  }
  
  .section-subtitle {
    font-size: 1rem;
    color: #666;
    margin: 0;
  }
  
  .products-slider {
    position: relative;
    overflow: hidden;
    border-radius: 15px;
  }
  
  .products-track {
    display: flex;
    gap: 20px;
    transition: transform 0.3s ease;
    padding: 20px 0;
  }
  
  .product-slide {
    min-width: 280px;
    flex-shrink: 0;
  }
  
  .product-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    height: 100%;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
  
  .product-image-wrapper {
    position: relative;
    height: 200px;
    overflow: hidden;
  }
  
  .product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .product-card:hover .product-image {
    transform: scale(1.05);
  }
  
  .product-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .product-card:hover .product-overlay {
    opacity: 1;
  }
  
  .product-actions {
    display: flex;
    gap: 10px;
    flex-direction: column;
    align-items: center;
  }
  
  .btn-quick-view,
  .btn-add-to-cart {
    padding: 8px 16px;
    border: none;
    border-radius: 20px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    background: #ff6b35;
    color: white;
    font-size: 0.8rem;
  }
  
  .btn-quick-view:hover,
  .btn-add-to-cart:hover {
    background: #e55a2b;
    transform: translateY(-1px);
  }
  
  .product-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #ff6b35;
    color: white;
    padding: 4px 8px;
    border-radius: 10px;
    font-size: 0.7rem;
    font-weight: 600;
    z-index: 2;
  }
  
  .product-info {
    padding: 15px;
  }
  
  .product-title {
    margin: 0 0 8px 0;
  }
  
  .product-title a {
    color: #000;
    text-decoration: none;
    font-size: 1rem;
    font-weight: 600;
    transition: color 0.3s ease;
    display: block;
    line-height: 1.3;
  }
  
  .product-title a:hover {
    color: #ff6b35;
  }
  
  .product-price {
    margin: 0;
  }
  
  .price-sale {
    font-size: 1rem;
    font-weight: 700;
    color: #ff6b35;
    margin-right: 8px;
  }
  
  .price-compare {
    font-size: 0.8rem;
    color: #999;
    text-decoration: line-through;
  }
  
  .price-regular {
    font-size: 1rem;
    font-weight: 700;
    color: #000;
  }
  
  .slider-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 10;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  .slider-btn:hover {
    background: #ff6b35;
    color: white;
    transform: translateY(-50%) scale(1.1);
  }
  
  .slider-btn-prev {
    left: 10px;
  }
  
  .slider-btn-next {
    right: 10px;
  }
  
  .slider-dots {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 30px;
  }
  
  .slider-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #ddd;
    cursor: pointer;
    transition: background 0.3s ease;
  }
  
  .slider-dot.active {
    background: #ff6b35;
  }
  
  @media (max-width: 768px) {
    .related-products {
      padding: 60px 0;
    }
    
    .product-slide {
      min-width: 250px;
    }
    
    .product-actions {
      flex-direction: row;
      gap: 8px;
    }
    
    .btn-quick-view,
    .btn-add-to-cart {
      padding: 6px 12px;
      font-size: 0.7rem;
    }
    
    .slider-btn {
      width: 40px;
      height: 40px;
    }
    
    .slider-btn svg {
      width: 20px;
      height: 20px;
    }
  }
</style>

<script>
  // Related products slider
  document.addEventListener('DOMContentLoaded', function() {
    const productsTrack = document.getElementById('products-track');
    const prevBtn = document.getElementById('slider-prev');
    const nextBtn = document.getElementById('slider-next');
    const dotsContainer = document.getElementById('slider-dots');
    
    if (!productsTrack) return;
    
    const slides = productsTrack.querySelectorAll('.product-slide');
    const slideWidth = slides[0].offsetWidth + 20; // width + gap
    const visibleSlides = Math.floor(productsTrack.parentElement.offsetWidth / slideWidth);
    const totalSlides = slides.length;
    const maxIndex = Math.max(0, totalSlides - visibleSlides);
    
    let currentIndex = 0;
    
    // Create dots
    for (let i = 0; i <= maxIndex; i++) {
      const dot = document.createElement('div');
      dot.className = 'slider-dot';
      if (i === 0) dot.classList.add('active');
      dot.addEventListener('click', () => goToSlide(i));
      dotsContainer.appendChild(dot);
    }
    
    const dots = dotsContainer.querySelectorAll('.slider-dot');
    
    function updateSlider() {
      const translateX = -currentIndex * slideWidth;
      productsTrack.style.transform = `translateX(${translateX}px)`;
      
      // Update dots
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentIndex);
      });
      
      // Update button states
      prevBtn.style.opacity = currentIndex === 0 ? '0.5' : '1';
      nextBtn.style.opacity = currentIndex === maxIndex ? '0.5' : '1';
    }
    
    function goToSlide(index) {
      currentIndex = Math.max(0, Math.min(maxIndex, index));
      updateSlider();
    }
    
    function nextSlide() {
      if (currentIndex < maxIndex) {
        currentIndex++;
        updateSlider();
      }
    }
    
    function prevSlide() {
      if (currentIndex > 0) {
        currentIndex--;
        updateSlider();
      }
    }
    
    // Event listeners
    nextBtn.addEventListener('click', nextSlide);
    prevBtn.addEventListener('click', prevSlide);
    
    // Auto-play (optional)
    let autoPlayInterval;
    
    function startAutoPlay() {
      autoPlayInterval = setInterval(() => {
        if (currentIndex < maxIndex) {
          nextSlide();
        } else {
          goToSlide(0);
        }
      }, 4000);
    }
    
    function stopAutoPlay() {
      clearInterval(autoPlayInterval);
    }
    
    // Start auto-play
    startAutoPlay();
    
    // Pause auto-play on hover
    productsTrack.addEventListener('mouseenter', stopAutoPlay);
    productsTrack.addEventListener('mouseleave', startAutoPlay);
    
    // Handle resize
    window.addEventListener('resize', () => {
      // Recalculate dimensions on resize
      setTimeout(() => {
        const newVisibleSlides = Math.floor(productsTrack.parentElement.offsetWidth / slideWidth);
        const newMaxIndex = Math.max(0, totalSlides - newVisibleSlides);
        
        if (currentIndex > newMaxIndex) {
          goToSlide(newMaxIndex);
        } else {
          updateSlider();
        }
      }, 100);
    });
    
    // Initialize
    updateSlider();
  });
</script>